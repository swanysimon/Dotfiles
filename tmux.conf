# tmux.conf
# Simon Swanson
# I take no reponsibility for you harming yourself or your computer trying to use this configuration file

# clear all bindings so I can make my own
# easily the most dangerous part of the process
unbind-key -a

# prefix to CTRL-U
set-option -g  prefix C-u
bind-key   C-u send-prefix
bind-key   :   command-prompt


####
#### panes
####

# pane navigation
bind-key -r h select-pane   -L
bind-key -r j select-pane   -D
bind-key -r k select-pane   -U
bind-key -r l select-pane   -R
bind-key -r r rotate-window -D
bind-key -r R rotate-window -U

# prefix-free pane navigation
bind-key -t root C-h select-pane -L
bind-key -t root C-j select-pane -D
bind-key -t root C-k select-pane -U
bind-key -t root C-l select-pane -R

# pane modification
# "smart" splitting calibrated for 14 point Menlo font on a 16:10 display - do some math to figure out your numbers
bind-key    b   break-pane
bind-key -r s   if-shell \
        "[[ 0 -lt $((8*#{pane_width}-18*#{pane_height})) ]]" \
            "split-window -h -c '#{pane_current_path}'" \
            "split-window -c '#{pane_current_path}'"
bind-key    C-s command-prompt -p "Open new pane with command:" \
        "if-shell \"[[ 0 -gt $((8*#{pane_width}-18*#{pane_height})) ]]\" \"split-window -c '#{pane_current_path}' '%1'\" \"split-window -h -c '#{pane_current_path}' '%1'\""
bind-key    C-x confirm-before -p "Close pane #P? (y/n)" kill-pane
bind-key -r -   split-window
bind-key -r |   split-window   -h

#### panes


####
#### windows
####

# window navigation
bind-key -r [   select-window  -p
bind-key -r ]   select-window  -n
bind-key    '#' command-prompt -p "Switch to window:" "select-window -t '%1'"

# prefix-free window nagivation
bind-key -t root C-[ select-window -p
bind-key -t root C-] select-window -n

# window modifications
bind-key -r t   new-window
bind-key -r n   new-window
bind-key    C-t command-prompt -p "New window with command:" "new-window -c '#{pane_current_path}' '%1' \; rename-window '%1'"
bind-key    C-n command-prompt -p "New window with command:" "new-window -c '#{pane_current_path}' '%1' \; rename-window '%1'"
bind-key    C-r command-prompt -p 'Rename window "#W":'      "rename-window '%1'"
bind-key    C-w confirm-before -p 'Close window "#W"? (y/n)' kill-window
bind-key -r `   last-window
bind-key -r <   swap-window    -t:-1
bind-key -r >   swap-window    -t:+1

#### windows


####
#### sessions
####

# TODO: good way of prompting new session and session switch
bind-key    d   detach-client
bind-key    D   detach-client -a
bind-key    C-q confirm-before -p 'Quit session "#S"? (y/n)' kill-session
bind-key -r {   switch-client  -p
bind-key -r }   switch-client  -n

#### sessions


####
#### copy-mode
####

# vi > emacs
set-option        -g status-keys vi
set-window-option -g mode-keys   vi

# copy to/from OS X clipboard
bind-key            /   copy-mode -e
bind-key -t vi-copy v   begin-selection
bind-key -t vi-copy C-v rectangle-toggle
bind-key -t vi-copy y   copy-pipe        "pbcopy && tmux delete-buffer"

# page up/down navigate copy mode
bind-key -n         PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -t vi-copy NPage page-down
bind-key -t vi-copy PPage page-up

#### copy-mode


####
#### mouse
####

set-option -g -q mouse on
bind-key -n WheelUpPane   if-shell -F \
        "#{mouse_any_flag}" "send-keys -M" \
        "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind-key -n WheelDownPane select-pane \; send-keys -M

#### mouse


####
#### terminal
####

# opens tmux with native clipboard and application support
set-option -g  default-command   "reattach-to-user-namespace -l bash"
set-option -g  default-terminal  "xterm-256color"
set-option -g  history-limit     30000

# window sanity settings
set-option        -g base-index        1
set-option        -g bell-action       any
set-option        -g renumber-windows  on
set-window-option -g aggressive-resize off
set-window-option -g pane-base-index   1

# command timeouts
set-option -sg escape-time 0
set-option -g  repeat-time 250
#### terminal


####
#### status bar
####

# status bar configuration
set-option        -g message-command-style         fg=black,bg=white
set-option        -g message-style                 fg=black,bg=white
set-option        -g status                        on
set-option        -g status-interval               1
set-option        -g status-justify                left
set-option        -g status-left                   "[#S] "
set-option        -g status-left-length            100
set-option        -g status-position               bottom
set-option        -g status-right                  "[#h]"
set-option        -g status-right-length           100
set-option        -g status-style                  fg=red
set-option        -g visual-activity               off
set-window-option -g monitor-activity              on
set-window-option -g window-status-activity-attr   none
set-window-option -g window-status-current-format  "[#W]"
set-window-option -g window-status-current-style   fg=yellow
set-window-option -g window-status-format          "(#I:#W#F)"
set-window-option -g window-status-style           fg=magenta

#### status bar

