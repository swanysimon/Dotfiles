#!/usr/bin/env bash

# shellcheck disable=SC2009
if ! ps -p "$$" -o command= | grep -q "bash$"; then
  echo "Bash configuration was called for non-bash shell. Skipping configuration." 1>&2
  return 0
fi

__source_if_file_exists () {
  declare FILENAME
  FILENAME="$1"
  if [ -e "$FILENAME" ]; then
    # shellcheck disable=SC1090
    source "$FILENAME"
  fi
}

__physical_file () {
  declare FILE
  FILE="$1"

  if [ ! -e "FILE" ]; then
    echo "${FILE}: no such file or directory"
    return 2
  fi

  while [ -L "$FILE" ]; do
    if [ "$(uname)" = "Darwin" ]; then
      FILE="$(readlink "$FILE")"
    else
      FILE="$(readlink -f "$FILE")"
    fi
  done

  declare DIRECTORY
  DIRECTORY="$(cd "$(dirname "$FILE")" >/dev/null 2>&1 && pwd -P)"

  echo "${DIRECTORY}/$(basename "$FILE")"
}

# shellcheck source=./bash_env.sh
source "${DOTFILES_DIR}/shell/bash_env.sh"

if [ -z "$PS1" ] || ! grep -q "i" <<< "$-"; then
  # shell is not interactive
  return
fi

# shellcheck source=./bash_functions.sh
source "${DOTFILES_DIR}/shell/bash_aliases.sh"
# shellcheck source=./bash_aliases.sh
source "${DOTFILES_DIR}/shell/bash_functions.sh"

# gitignored "plugin" directory, where every shell file is source
if [ -d "${DOTFILES_DIR}/shell/private/" ]; then
  while read -r FOUND_SOURCING_FILE; do
    # shellcheck disable=SC1090
    source "$FOUND_SOURCING_FILE"
  done < <(find -L "${DOTFILES_DIR}/shell/private/" -type f -name '*\.sh')
  unset FOUND_SOURCING_FILE
fi

if command -v brew &>/dev/null; then
    if [ -d "$(brew --prefix)/etc/bash_completion.d" ]; then
      BASH_COMPLETION_COMPAT_DIR="$(brew --prefix)/etc/bash_completion.d"
      export BASH_COMPLETION_COMPAT_DIR="$BASH_COMPLETION_COMPAT_DIR"
      __source_if_file_exists "$(brew --prefix)/share/bash-completion/bash_completion"
    fi

    __source_if_file_exists "$(brew --prefix)/etc/profile.d/bash_completion.sh"
else
  __source_if_file_exists /etc/bash_completion
fi

if command -v __git_complete &>/dev/null; then
  __git_complete g _git
elif command -v _completion_loader &>/dev/null; then
    _completion_loader git
elif ! complete -o default -o nospace -F _git g &>/dev/null; then
  complete -o bashdefault -o default -o nospace -F _git g &>/dev/null
fi

# shellcheck source=./prompt.sh
source "${DOTFILES_DIR}/shell/prompt.sh"
