# tmux.conf
# Simon Swanson

####
####

# clear all bindings
unbind -a

# set my prefixes
set -g   prefix C-u
bind C-u send-prefix
bind :   command-prompt
bind \;  command-prompt

# pane selection
bind -r h selectp -L
bind -r j selectp -D
bind -r k selectp -U
bind -r l selectp -R

# window selection
bind -r C-h prev
bind -r C-l next
bind    C-s command-prompt -p "Switch to window number:" "selectw -t '%%'"
bind    1   selectw -t 1
bind    2   selectw -t 2
bind    3   selectw -t 3
bind    4   selectw -t 4
bind    5   selectw -t 5
bind    6   selectw -t 6
bind    7   selectw -t 7
bind    8   selectw -t 8
bind    9   selectw -t 9

# pane splitting and unsplitting
bind | splitw  -h -c "#{pane_current_path}"
bind - splitw  -v -c "#{pane_current_path}"
bind x confirm -p    "Kill pane #P? (y/n)" killp

# "smart" pane splitting, lowercase opens larger pane, uppercase smaller
# numbers used for 14 point Menlo fond on 16:10 display
bind c run "[[ $(($(tmux display -p '8*#{pane_width}-18*#{pane_height}'))) -lt 0 ]] && tmux command-prompt -p \"Open large pane with command:\" \"splitw -v -c '#{pane_current_path}' '%%'\" || tmux command-prompt -p \"Open large pane with command:\" \"splitw -h -c '#{pane_current_path}' '%%'\""
bind C run "[[ $(($(tmux display -p '8*#{pane_width}-18*#{pane_height}'))) -lt 0 ]] && tmux command-prompt -p \"Open small pane with command:\" \"splitw -h -c '#{pane_current_path}' '%%'\" || tmux command-prompt -p \"Open small pane with command:\" \"splitw -v -c '#{pane_current_path}' '%%'\""
bind s run "[[ $(($(tmux display -p '8*#{pane_width}-18*#{pane_height}'))) -lt 0 ]] && tmux splitw -v -c '#{pane_current_path}' || tmux splitw -h -c '#{pane_current_path}'"
bind S run "[[ $(($(tmux display -p '8*#{pane_width}-18*#{pane_height}'))) -lt 0 ]] && tmux splitw -h -c '#{pane_current_path}' || tmux splitw -v -c '#{pane_current_path}'"

# manage windows
bind m command-prompt -p "New window with command:" "neww '%%'"
bind n neww
bind N breakp
bind q confirm        -p 'Kill window "#W"? (y/n)'  killw
bind R command-prompt -p 'Rename window "#W":' "renamew '%%'"

# session management
bind a command-prompt -p "Attach to session:"   "attach -t '%%'"
bind d detach
bind D detach -a
bind r command-prompt -p 'Rename session "#S":' "rename '%%'"

# copy-paste mechanisms that interact with the system clipboard while keeping tmux buffers empty
# requires reattach-to-user-namespace be installed on OS X
bind            o copy-mode
bind            p run             "reattach-to-user-namespace pbpaste | tmux loadb - && tmux pasteb && tmux deleteb"
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-pipe       "reattach-to-user-namespace pbcopy && tmux deleteb"

# reload settings
bind C-r source ~/.tmux.conf \; display "Configuration reloaded"

####
####

# general sanity
set -g base-index 1
set -g renumber-windows on
set -g visual-activity on
setw -g aggressive-resize off
setw -g monitor-activity  on
setw -g pane-base-index   1

# window title configuration
set -g set-titles        on
set -g set-titles-string 'Yes, Master?'

# basic status bar configuration
set -g message-command-style fg=black,bg=white
set -g message-style         fg=black,bg=white
set -g status                on
set -g status-interval       1
set -g status-justify        center
set -g status-position       bottom
set -g status-style          fg=brightmagenta,bg=brightblack

# left side of status bar configuration
set -g status-left        "[#S] "
set -g status-left-length 40

# right side of status bar configuration
set -g status-right        '"#h"'
set -g status-right-length 60

# terminal modifications
set -g default-terminal "screen-256color"
set -g history-limit    10000

# better interactions with copy-paste shortcuts
set -g buffer-limit 1

# command timeouts
set -g escape-time 50
set -g repeat-time 250

# make mouse useful
# needs EasySIMBL and MouseTerm installed on default OS X Terminal
# still doesn't work all the time; very annoying; recommend iTerm2
setw -g mode-mouse          on
set  -g mouse-resize-pane   on
set  -g mouse-select-pane   on
set  -g mouse-select-window on

# vi > emacs
setw -g mode-keys   vi
set  -g status-keys vi

# allows interaction with system clipboard and applications
set -g default-command    "reattach-to-user-namespace -l bash"
set -g update-environment
