# bash_prompt

__git_prompt () {
    if [ -z "$(git rev-parse --is-inside-work-tree 2> /dev/null)" ]; then
        return 0
    fi

    local LOCAL_BRANCH="$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)"
    local REMOTE_BRANCH="$(git rev-parse --symbolic-full-name --abbrev-ref @{upstream} 2> /dev/null)"
    local LOCAL_REMOTE_DIFF="$(git rev-list --left-right --count ${LOCAL_BRANCH}...${REMOTE_BRANCH})"

    local LOCAL_AHEAD="$(echo $LOCAL_REMOTE_DIFF | awk '{ print $1 }')"
    if [ $LOCAL_AHEAD -ne 0 ]; then
        local LOCAL_STATUS_STRING="\u2191${LOCAL_AHEAD}"
    fi

    local REMOTE_AHEAD="$(echo $LOCAL_REMOTE_DIFF | awk '{ print $2 }')"
    if [ $REMOTE_AHEAD -ne 0 ]; then
        local REMOTE_STATUS_STRING="\u2191${REMOTE_AHEAD}"
    fi

    printf "\[$(tput setaf 1)\]%s%b|%s%b" "$LOCAL_BRANCH" "$LOCAL_STATUS_STRING" "$REMOTE_BRANCH" "$REMOTE_STATUS_STRING"
}

__right_aligned_date () {
    printf "\[$(tput setaf 0)\]%$((COLUMNS-1))s" "$(date +%R)"
}

__previous_return_status () {
    if [ $1 -eq 0 ]; then
        printf "\[$(tput setaf 2)\]\u2713"
    else
        printf "\[$(tput setaf 1)\]\u2717"
    fi
}

__prompt_command () {
    local EXIT_CODE=$?
    export PROMPT_DIRTRIM=3
    local DATE_STRING="$(__right_aligned_date)"
    local HOST_STRING="\[$(tput setaf 2)\]\h"
    local CWD_STRING="\[$(tput setaf 3)\]\w"
    local GIT_STRING="$(__git_prompt)"
    local RETURN_STRING="$(__previous_return_status $EXIT_CODE)"
    export PS1="${DATE_STRING}\r${HOST_STRING} ${CWD_STRING} ${GIT_STRING} ${OLDPWD_STRING}\n${RETURN_STRING} \[$(tput sgr0)\]$ "
}

PROMPT_COMMAND=__prompt_command

